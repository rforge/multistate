library(roxygen2)
roxygenize("test4")
roxygenize("test4")
?get.rate.params
?get.rate.matrices
?get.rate.matrices.list
?get.rate.matrix.list
?get.emission.matrix.list
?get.init.matrix.list
?get.rate.matrix.list
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
update.emission.init.all
setwd("/Users/janelange/Documents/R_biostat/BOS")
#source("get_matrices.r")
#source("BOS/M_step BOS.r")
#source("E.step.init.emission.r")
#source("covariates_max.R")
#source("hazard_and_survival.R")
#source("EM.R")
load("BOS/bosdata.Rdata")
library(test4)
library(sqldf)
logit<-function(p){
log(p/(1-p))
}
#Covariate data
cov.data=sqldf("select distinct id, transtype from data group by id")
cov.data[cov.data$id>=400000,]$transtype=4
cov.data$transtype<-as.numeric(I(cov.data$transtype==4))
data$transtype=as.numeric(data$id>=400000)
#####################################################
#Set up the design matrices
######################################################
#Rate object
rates.setup=list(num.states=NULL, transition.codes=NULL, fixed.rates=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL, param.types=NULL,variable.predictors=NULL)
####################################################
#Init object
init.setup=list(num.states=NULL,states=c(1,3),ref=1, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL)
######################################################################
#Emission object
emission.setup=list(emission.states=NULL,ref.states=NULL, exact.states=NULL, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL )
######################################################################
#Emission matrix design
######################################################################
design.emission=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/emission_design.csv",header=T)
emission.setup$emission.states=design.emission[,c("i","j")]
emission.setup$design.matrix=design.emission[,3:dim(design.emission)[2]]
emission.setup$ref.states=matrix(c(1,1,2,1,3,2,4,2),ncol=2,byrow=T,dimnames=list(seq(1:4),c("i","j")))
emission.setup$variable.predictors=matrix(c(1,2,2,2),nrow=2,byrow=T,dimnames=list(seq(1:2),c("i","j")))
emission.setup$covariate.array=get.covariate.array(emission.setup$design.matrix,cov.data=cov.data,emission.setup$variable.predictors)
emission.setup$param.types=c(0,0,0)
emission.setup$exact.states=matrix(c(5,3),nrow=1,dimnames=list(1,c("i","j")))
emission.setup$param.values=c(logit(.028),1.306,logit(.007))
######################################################################
#rate matrix design
######################################################################
design=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/design.csv",header=T,row.names=1)
design.matrix=(design[1:10,3:dim(design)[2]])
rates.setup$design.matrix=design.matrix
rates.setup$transition.codes=design[1:10,c(1,2)]
rates.setup$param.values=log(c(a=.207,b=.339,c=.016,d=.113,e=.5,f=1.369,j=exp(-1.093),k=exp(-1.158)))
rates.setup$covariate.array=get.covariate.array(design.matrix,cov.data)
rates.setup$param.types=design[11,3:dim(design)[2]]
rates.setup$num.states=5
######################################################################
#initial distribution design
######################################################################
#read in the design matrix for the initial dist
design.init=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/init_dist_design.csv",header=T)
design.matrix.init=design.init[,2:dim(design.init)[2]]
init.setup$num.states=5
init.setup$design.matrix=design.matrix.init
init.setup$variable.predictors=matrix(c(1,2),nrow=1,byrow=T,dimnames=list(seq(1),col_names=c("i","j")))
init.setup$covariate.array=get.covariate.array(init.setup$design.matrix,cov.data,init.setup$variable.predictors)
init.setup$param.values=c(logit(.094),.937)
init.setup$param.types=c(0,0)
out=EM(rates.setup,init.setup,emission.setup,the.data,num.subjects=316,num.states=5,num.obs.states=3,tol=1e-2)
#check emission probs to see if results are reasonable
emission.list=get.emission.matrix.list(out$params[9:11],emission.setup,num.states=5,num.obs.states=3,num.subjects=316)
delta.list=get.init.matrix.list(out$params[12:13],init.setup)
rates.list=get.rate.matrix.list(out$params[1:8],rates.setup)
rate.matrix=rates.list[[1]]
haz1=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(1,0,0,0),rate.matrix=rate.matrix,absorb.state=5))
haz2=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,1,0,0),rate.matrix=rate.matrix,absorb.state=5))
haz3=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,0,1,0),rate.matrix=rate.matrix,absorb.state=5))
haz4=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,0,0,1),rate.matrix=rate.matrix,absorb.state=5))
plot(seq(0,10,by=.25),haz1*10,type="l",col="black",ylim=c(0,10),lwd=2,ylab="hazard of death per 10 person years",xlab="time since entry in state")
lines(seq(0,10,by=.25),haz2*10,type="l",col="red",lwd=2)
lines(seq(0,10,by=.25),haz3*10,type="l",col="purple",lwd=2)
lines(seq(0,10,by=.25),haz4*10,type="l",col="blue",lwd=2)
legend("topright",legend=c("Healthy 1","Healthy 2","BOS 1","BOS 2"),col=c("black","red","purple","blue"),lwd=2,lty=1,bty="n")
surv1=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(1,0,0,0),rate.matrix=rate.matrix,absorb.state=5))
surv2=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,1,0,0),rate.matrix=rate.matrix,absorb.state=5))
surv3=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,0,1,0),rate.matrix=rate.matrix,absorb.state=5))
surv4=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,0,0,1),rate.matrix=rate.matrix,absorb.state=5))
plot(seq(0,10,by=.25),surv1,type="l",col="black",ylim=c(0,1),lwd=2,ylab="survival probability",xlab="time since entry in state")
lines(seq(0,10,by=.25),surv2,type="l",col="red",lwd=2)
lines(seq(0,10,by=.25),surv3,type="l",col="purple",lwd=2)
lines(seq(0,10,by=.25),surv4,type="l",col="dark green",lwd=2)
legend("bottomleft",legend=c("Healthy 1","Healthy 2","BOS 1","BOS 2"),col=c("black","red","purple","blue"),lwd=2,lty=1,bty="n")
roxygenize("test4")
setwd("/Users/janelange/Documents/R_biostat/BOS")
#source("get_matrices.r")
#source("BOS/M_step BOS.r")
#source("E.step.init.emission.r")
#source("covariates_max.R")
#source("hazard_and_survival.R")
#source("EM.R")
load("BOS/bosdata.Rdata")
library(test4)
library(sqldf)
logit<-function(p){
log(p/(1-p))
}
#Covariate data
cov.data=sqldf("select distinct id, transtype from data group by id")
cov.data[cov.data$id>=400000,]$transtype=4
cov.data$transtype<-as.numeric(I(cov.data$transtype==4))
data$transtype=as.numeric(data$id>=400000)
#####################################################
#Set up the design matrices
######################################################
#Rate object
rates.setup=list(num.states=NULL, transition.codes=NULL, fixed.rates=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL, param.types=NULL,variable.predictors=NULL)
####################################################
#Init object
init.setup=list(num.states=NULL,states=c(1,3),ref=1, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL)
######################################################################
#Emission object
emission.setup=list(emission.states=NULL,ref.states=NULL, exact.states=NULL, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL )
######################################################################
#Emission matrix design
######################################################################
design.emission=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/emission_design.csv",header=T)
emission.setup$emission.states=design.emission[,c("i","j")]
emission.setup$design.matrix=design.emission[,3:dim(design.emission)[2]]
emission.setup$ref.states=matrix(c(1,1,2,1,3,2,4,2),ncol=2,byrow=T,dimnames=list(seq(1:4),c("i","j")))
emission.setup$variable.predictors=matrix(c(1,2,2,2),nrow=2,byrow=T,dimnames=list(seq(1:2),c("i","j")))
emission.setup$covariate.array=get.covariate.array(emission.setup$design.matrix,cov.data=cov.data,emission.setup$variable.predictors)
emission.setup$param.types=c(0,0,0)
emission.setup$exact.states=matrix(c(5,3),nrow=1,dimnames=list(1,c("i","j")))
emission.setup$param.values=c(logit(.028),1.306,logit(.007))
######################################################################
#rate matrix design
######################################################################
design=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/design.csv",header=T,row.names=1)
design.matrix=(design[1:10,3:dim(design)[2]])
rates.setup$design.matrix=design.matrix
rates.setup$transition.codes=design[1:10,c(1,2)]
rates.setup$param.values=log(c(a=.207,b=.339,c=.016,d=.113,e=.5,f=1.369,j=exp(-1.093),k=exp(-1.158)))
rates.setup$covariate.array=get.covariate.array(design.matrix,cov.data)
rates.setup$param.types=design[11,3:dim(design)[2]]
rates.setup$num.states=5
######################################################################
#initial distribution design
######################################################################
#read in the design matrix for the initial dist
design.init=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/init_dist_design.csv",header=T)
design.matrix.init=design.init[,2:dim(design.init)[2]]
init.setup$num.states=5
init.setup$design.matrix=design.matrix.init
init.setup$variable.predictors=matrix(c(1,2),nrow=1,byrow=T,dimnames=list(seq(1),col_names=c("i","j")))
init.setup$covariate.array=get.covariate.array(init.setup$design.matrix,cov.data,init.setup$variable.predictors)
init.setup$param.values=c(logit(.094),.937)
init.setup$param.types=c(0,0)
out=EM(rates.setup,init.setup,emission.setup,the.data,num.subjects=316,num.states=5,num.obs.states=3,tol=1e-2)
?EM
setwd("/Users/janelange/Documents/myR")
library(roxygen2)
roxygenize("test4")
?phase.hazard
?phase.survival
?phase.survival
?phase.surv
roxygenize("test4")
setwd("/Users/janelange/Documents/R_biostat/BOS")
#source("get_matrices.r")
#source("BOS/M_step BOS.r")
#source("E.step.init.emission.r")
#source("covariates_max.R")
#source("hazard_and_survival.R")
#source("EM.R")
load("BOS/bosdata.Rdata")
library(test4)
library(sqldf)
logit<-function(p){
log(p/(1-p))
}
#Covariate data
cov.data=sqldf("select distinct id, transtype from data group by id")
cov.data[cov.data$id>=400000,]$transtype=4
cov.data$transtype<-as.numeric(I(cov.data$transtype==4))
data$transtype=as.numeric(data$id>=400000)
#####################################################
#Set up the design matrices
######################################################
#Rate object
rates.setup=list(num.states=NULL, transition.codes=NULL, fixed.rates=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL, param.types=NULL,variable.predictors=NULL)
####################################################
#Init object
init.setup=list(num.states=NULL,states=c(1,3),ref=1, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL)
######################################################################
#Emission object
emission.setup=list(emission.states=NULL,ref.states=NULL, exact.states=NULL, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL )
######################################################################
#Emission matrix design
######################################################################
design.emission=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/emission_design.csv",header=T)
emission.setup$emission.states=design.emission[,c("i","j")]
emission.setup$design.matrix=design.emission[,3:dim(design.emission)[2]]
emission.setup$ref.states=matrix(c(1,1,2,1,3,2,4,2),ncol=2,byrow=T,dimnames=list(seq(1:4),c("i","j")))
emission.setup$variable.predictors=matrix(c(1,2,2,2),nrow=2,byrow=T,dimnames=list(seq(1:2),c("i","j")))
emission.setup$covariate.array=get.covariate.array(emission.setup$design.matrix,cov.data=cov.data,emission.setup$variable.predictors)
emission.setup$param.types=c(0,0,0)
emission.setup$exact.states=matrix(c(5,3),nrow=1,dimnames=list(1,c("i","j")))
emission.setup$param.values=c(logit(.028),1.306,logit(.007))
######################################################################
#rate matrix design
######################################################################
design=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/design.csv",header=T,row.names=1)
design.matrix=(design[1:10,3:dim(design)[2]])
rates.setup$design.matrix=design.matrix
rates.setup$transition.codes=design[1:10,c(1,2)]
rates.setup$param.values=log(c(a=.207,b=.339,c=.016,d=.113,e=.5,f=1.369,j=exp(-1.093),k=exp(-1.158)))
rates.setup$covariate.array=get.covariate.array(design.matrix,cov.data)
rates.setup$param.types=design[11,3:dim(design)[2]]
rates.setup$num.states=5
######################################################################
#initial distribution design
######################################################################
#read in the design matrix for the initial dist
design.init=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/init_dist_design.csv",header=T)
design.matrix.init=design.init[,2:dim(design.init)[2]]
init.setup$num.states=5
init.setup$design.matrix=design.matrix.init
init.setup$variable.predictors=matrix(c(1,2),nrow=1,byrow=T,dimnames=list(seq(1),col_names=c("i","j")))
init.setup$covariate.array=get.covariate.array(init.setup$design.matrix,cov.data,init.setup$variable.predictors)
init.setup$param.values=c(logit(.094),.937)
init.setup$param.types=c(0,0)
out=EM(rates.setup,init.setup,emission.setup,the.data,num.subjects=316,num.states=5,num.obs.states=3,tol=1e-2)
#check emission probs to see if results are reasonable
emission.list=get.emission.matrix.list(out$params[9:11],emission.setup,num.states=5,num.obs.states=3,num.subjects=316)
delta.list=get.init.matrix.list(out$params[12:13],init.setup)
rates.list=get.rate.matrix.list(out$params[1:8],rates.setup)
rate.matrix=rates.list[[1]]
haz1=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(1,0,0,0),rate.matrix=rate.matrix,absorb.state=5))
haz2=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,1,0,0),rate.matrix=rate.matrix,absorb.state=5))
haz3=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,0,1,0),rate.matrix=rate.matrix,absorb.state=5))
haz4=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,0,0,1),rate.matrix=rate.matrix,absorb.state=5))
plot(seq(0,10,by=.25),haz1*10,type="l",col="black",ylim=c(0,10),lwd=2,ylab="hazard of death per 10 person years",xlab="time since entry in state")
lines(seq(0,10,by=.25),haz2*10,type="l",col="red",lwd=2)
lines(seq(0,10,by=.25),haz3*10,type="l",col="purple",lwd=2)
lines(seq(0,10,by=.25),haz4*10,type="l",col="blue",lwd=2)
legend("topright",legend=c("Healthy 1","Healthy 2","BOS 1","BOS 2"),col=c("black","red","purple","blue"),lwd=2,lty=1,bty="n")
surv1=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(1,0,0,0),rate.matrix=rate.matrix,absorb.state=5))
surv2=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,1,0,0),rate.matrix=rate.matrix,absorb.state=5))
surv3=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,0,1,0),rate.matrix=rate.matrix,absorb.state=5))
surv4=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,0,0,1),rate.matrix=rate.matrix,absorb.state=5))
plot(seq(0,10,by=.25),surv1,type="l",col="black",ylim=c(0,1),lwd=2,ylab="survival probability",xlab="time since entry in state")
lines(seq(0,10,by=.25),surv2,type="l",col="red",lwd=2)
lines(seq(0,10,by=.25),surv3,type="l",col="purple",lwd=2)
lines(seq(0,10,by=.25),surv4,type="l",col="dark green",lwd=2)
legend("bottomleft",legend=c("Healthy 1","Healthy 2","BOS 1","BOS 2"),col=c("black","red","purple","blue"),lwd=2,lty=1,bty="n")
#source("get_matrices.r")
setwd("/Users/janelange/Documents/R_biostat/BOS")
#source("get_matrices.r")
#source("BOS/M_step BOS.r")
#source("E.step.init.emission.r")
#source("covariates_max.R")
#source("hazard_and_survival.R")
#source("EM.R")
load("BOS/bosdata.Rdata")
library(test4)
library(sqldf)
logit<-function(p){
log(p/(1-p))
}
#Covariate data
cov.data=sqldf("select distinct id, transtype from data group by id")
cov.data[cov.data$id>=400000,]$transtype=4
cov.data$transtype<-as.numeric(I(cov.data$transtype==4))
data$transtype=as.numeric(data$id>=400000)
#####################################################
#Set up the design matrices
######################################################
#Rate object
rates.setup=list(num.states=NULL, transition.codes=NULL, fixed.rates=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL, param.types=NULL,variable.predictors=NULL)
####################################################
#Init object
init.setup=list(num.states=NULL,states=c(1,3),ref=1, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL)
######################################################################
#Emission object
emission.setup=list(emission.states=NULL,ref.states=NULL, exact.states=NULL, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL )
######################################################################
#Emission matrix design
######################################################################
design.emission=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/emission_design.csv",header=T)
emission.setup$emission.states=design.emission[,c("i","j")]
emission.setup$design.matrix=design.emission[,3:dim(design.emission)[2]]
emission.setup$ref.states=matrix(c(1,1,2,1,3,2,4,2),ncol=2,byrow=T,dimnames=list(seq(1:4),c("i","j")))
emission.setup$variable.predictors=matrix(c(1,2,2,2),nrow=2,byrow=T,dimnames=list(seq(1:2),c("i","j")))
emission.setup$covariate.array=get.covariate.array(emission.setup$design.matrix,cov.data=cov.data,emission.setup$variable.predictors)
emission.setup$param.types=c(0,0,0)
emission.setup$exact.states=matrix(c(5,3),nrow=1,dimnames=list(1,c("i","j")))
emission.setup$param.values=c(logit(.028),1.306,logit(.007))
######################################################################
#rate matrix design
######################################################################
design=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/design.csv",header=T,row.names=1)
design.matrix=(design[1:10,3:dim(design)[2]])
rates.setup$design.matrix=design.matrix
rates.setup$transition.codes=design[1:10,c(1,2)]
rates.setup$param.values=log(c(a=.207,b=.339,c=.016,d=.113,e=.5,f=1.369,j=exp(-1.093),k=exp(-1.158)))
rates.setup$covariate.array=get.covariate.array(design.matrix,cov.data)
rates.setup$param.types=design[11,3:dim(design)[2]]
rates.setup$num.states=5
######################################################################
#initial distribution design
######################################################################
#read in the design matrix for the initial dist
design.init=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/init_dist_design.csv",header=T)
design.matrix.init=design.init[,2:dim(design.init)[2]]
init.setup$num.states=5
init.setup$design.matrix=design.matrix.init
init.setup$variable.predictors=matrix(c(1,2),nrow=1,byrow=T,dimnames=list(seq(1),col_names=c("i","j")))
init.setup$covariate.array=get.covariate.array(init.setup$design.matrix,cov.data,init.setup$variable.predictors)
init.setup$param.values=c(logit(.094),.937)
init.setup$param.types=c(0,0)
out=EM(rates.setup,init.setup,emission.setup,the.data,num.subjects=316,num.states=5,num.obs.states=3,tol=1e-2)
#check emission probs to see if results are reasonable
emission.list=get.emission.matrix.list(out$params[9:11],emission.setup,num.states=5,num.obs.states=3,num.subjects=316)
delta.list=get.init.matrix.list(out$params[12:13],init.setup)
rates.list=get.rate.matrix.list(out$params[1:8],rates.setup)
rate.matrix=rates.list[[1]]
haz1=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(1,0,0,0),rate.matrix=rate.matrix,absorb.state=5))
haz2=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,1,0,0),rate.matrix=rate.matrix,absorb.state=5))
haz3=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,0,1,0),rate.matrix=rate.matrix,absorb.state=5))
haz4=unlist(lapply(seq(0,10,by=.25),FUN="phase.hazard",initial.dist=c(0,0,0,1),rate.matrix=rate.matrix,absorb.state=5))
plot(seq(0,10,by=.25),haz1*10,type="l",col="black",ylim=c(0,10),lwd=2,ylab="hazard of death per 10 person years",xlab="time since entry in state")
lines(seq(0,10,by=.25),haz2*10,type="l",col="red",lwd=2)
lines(seq(0,10,by=.25),haz3*10,type="l",col="purple",lwd=2)
lines(seq(0,10,by=.25),haz4*10,type="l",col="blue",lwd=2)
legend("topright",legend=c("Healthy 1","Healthy 2","BOS 1","BOS 2"),col=c("black","red","purple","blue"),lwd=2,lty=1,bty="n")
surv1=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(1,0,0,0),rate.matrix=rate.matrix,absorb.state=5))
surv2=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,1,0,0),rate.matrix=rate.matrix,absorb.state=5))
surv3=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,0,1,0),rate.matrix=rate.matrix,absorb.state=5))
surv4=unlist(lapply(seq(0,10,by=.25),FUN="phase.surv",initial.dist=c(0,0,0,1),rate.matrix=rate.matrix,absorb.state=5))
plot(seq(0,10,by=.25),surv1,type="l",col="black",ylim=c(0,1),lwd=2,ylab="survival probability",xlab="time since entry in state")
lines(seq(0,10,by=.25),surv2,type="l",col="red",lwd=2)
lines(seq(0,10,by=.25),surv3,type="l",col="purple",lwd=2)
lines(seq(0,10,by=.25),surv4,type="l",col="dark green",lwd=2)
legend("bottomleft",legend=c("Healthy 1","Healthy 2","BOS 1","BOS 2"),col=c("black","red","purple","blue"),lwd=2,lty=1,bty="n")
setwd("/Users/janelange/Documents/R_biostat/BOS")
#source("get_matrices.r")
#source("BOS/M_step BOS.r")
#source("E.step.init.emission.r")
#source("covariates_max.R")
#source("hazard_and_survival.R")
#source("EM.R")
load("BOS/bosdata.Rdata")
library(test4)
library(sqldf)
logit<-function(p){
log(p/(1-p))
}
#Covariate data
cov.data=sqldf("select distinct id, transtype from data group by id")
cov.data[cov.data$id>=400000,]$transtype=4
cov.data$transtype<-as.numeric(I(cov.data$transtype==4))
data$transtype=as.numeric(data$id>=400000)
#####################################################
#Set up the design matrices
######################################################
#Rate object
rates.setup=list(num.states=NULL, transition.codes=NULL, fixed.rates=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL, param.types=NULL,variable.predictors=NULL)
####################################################
#Init object
init.setup=list(num.states=NULL,states=c(1,3),ref=1, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL)
######################################################################
#Emission object
emission.setup=list(emission.states=NULL,ref.states=NULL, exact.states=NULL, fixed.dist=NULL, design.matrix=NULL, covariate.array=NULL, param.values=NULL,param.types=NULL,variable.predictors=NULL )
######################################################################
#Emission matrix design
######################################################################
design.emission=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/emission_design.csv",header=T)
emission.setup$emission.states=design.emission[,c("i","j")]
emission.setup$design.matrix=design.emission[,3:dim(design.emission)[2]]
emission.setup$ref.states=matrix(c(1,1,2,1,3,2,4,2),ncol=2,byrow=T,dimnames=list(seq(1:4),c("i","j")))
emission.setup$variable.predictors=matrix(c(1,2,2,2),nrow=2,byrow=T,dimnames=list(seq(1:2),c("i","j")))
emission.setup$covariate.array=get.covariate.array(emission.setup$design.matrix,cov.data=cov.data,emission.setup$variable.predictors)
emission.setup$param.types=c(0,0,0)
emission.setup$exact.states=matrix(c(5,3),nrow=1,dimnames=list(1,c("i","j")))
emission.setup$param.values=c(logit(.028),1.306,logit(.007))
######################################################################
#rate matrix design
######################################################################
design=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/design.csv",header=T,row.names=1)
design.matrix=(design[1:10,3:dim(design)[2]])
rates.setup$design.matrix=design.matrix
rates.setup$transition.codes=design[1:10,c(1,2)]
rates.setup$param.values=log(c(a=.207,b=.339,c=.016,d=.113,e=.5,f=1.369,j=exp(-1.093),k=exp(-1.158)))
rates.setup$covariate.array=get.covariate.array(design.matrix,cov.data)
rates.setup$param.types=design[11,3:dim(design)[2]]
rates.setup$num.states=5
######################################################################
#initial distribution design
######################################################################
#read in the design matrix for the initial dist
design.init=read.csv("/Users/janelange/Documents/Vladimir/Multi state models/Data/init_dist_design.csv",header=T)
design.matrix.init=design.init[,2:dim(design.init)[2]]
init.setup$num.states=5
init.setup$design.matrix=design.matrix.init
init.setup$variable.predictors=matrix(c(1,2),nrow=1,byrow=T,dimnames=list(seq(1),col_names=c("i","j")))
init.setup$covariate.array=get.covariate.array(init.setup$design.matrix,cov.data,init.setup$variable.predictors)
init.setup$param.values=c(logit(.094),.937)
init.setup$param.types=c(0,0)
out=EM(rates.setup,init.setup,emission.setup,the.data,num.subjects=316,num.states=5,num.obs.states=3,tol=1e-2)
?EM
#visualize dependencies in functions with foodweb
setwd("/Users/janelange/Documents/myR/test4/R")
library(roxygen2)
library(test4)
roxygenize("test4")
library(mvbutils)
source("E.step.emission.init.all.r")
source("EM.R")
source("E_step_init_emission.r")
source("covariates_max.R")
source("design_setup.r")
source("dur_loop_R.R")
source("eigen_decomp_list_R.R")
source("get.covariate.array.r")
source("get.emission.matrix.list.r")
source("get.init.matrix.list.r")
source("get.rate.matrix.list.r")
source("get_indiv_matrices.r")
source("get_mean.R")
source("joint_mean_markov_jumps.r")
source("joint_mean_markov_rewards.r")
source("mat_exp_eigen_R.R")
source("phase.hazard.r")
source("phase.survival.r")
source("rcpparma_forwardback.R")
source("test_joint_means_R.R")
source("trans_loop_R.R")
source("transition_prob_list.R")
source("update.emission.params.R")
source("update.init.params.r")
source("update.rate.params.r")
foodweb()
foodweb()
?foodweb
foodweb(,lwd=2)
foodweb(,lwd=2)
foodweb(,lwd=2)
?EM
foodweb(,lwd=2,pcx=.5)
foodweb(,lwd=2)
foodweb(,lwd=2)
foodweb(,lwd=2)
foodweb(,lwd=2)
foodweb(,lwd=2)
foodweb(,lwd=2)
foodweb(,lwd=2)
foodweb(,lwd=2)
setwd("/Users/janelange/Documents/myR/")
library(roxygen@)
library(roxygen2)
roxygenize("test4")
?EM
ls()
?E.step.emission.init.all
?get.covariate.array
?get.emission.init.states
?get.emission.matrix.list
?get.rate.matrix.list
?get.rate.matrix.list
?get.init.matrix.list
?get.prob.array
?phase.surv
?hazard.surv
?phase.hazard
?E.step.emission.init.all
update.rate.params
?update.rate.params
?update.init.params
roxygenize("test4")
roxygenize("test4")
baz <- function(x) UseMethod("baz", x)
baz.A <- function(x) "A"
baz.B <- function(x) "B"
ab <- structure(1, class = c("A", "B"))
ba <- structure(1, class = c("B", "A"))
baz(ab)
baz(ba)
baz.C <- function(x) c("C", NextMethod())
ca <- structure(1, class = c("C", "A"))
cb <- structure(1, class = c("C", "B"))
baz(ca)
baz(cb)
roxygenize("test4")
roxygenize("test4")
roxygenize("test4")
